{"version":2,"kind":"Notebook","sha256":"335083c90422a391ff63a023464f1d9857bff5b66eee2f09a9dea034a40b4fb8","slug":"morpho-id-auto","location":"/notebooks/morpho-id-auto.ipynb","dependencies":[],"frontmatter":{"title":"Anokin results so far (updated daily)","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"github":"https://github.com/sanjaynagi/anokin","keywords":["malaria","mosquitoes","population genetics","CKMR","Kenya"],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/sanjaynagi/anokin/blob/main/docs/anostep-site/notebooks/morpho-id-auto.ipynb","edit_url":"https://github.com/sanjaynagi/anokin/edit/main/docs/anostep-site/notebooks/morpho-id-auto.ipynb","exports":[{"format":"ipynb","filename":"morpho-id-auto.ipynb","url":"/morpho-id-auto-9c9d65b29ce4d7c5dbc80c0851cbde9e.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here are some quick analyses to look at the data so far :)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"u1Ex4lkji4"}],"key":"MFIbsQu3ce"}],"key":"eD0a6aoM2f"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport numpy as np\nfrom datetime import datetime\n\ndata_dir = 'docs/anokin-site/data'\n\n# Load the datasets\nmorpho_id = pd.read_csv(f'{data_dir}/ckmr_morpho_id.csv')\nmosquito_data = pd.read_csv(f'{data_dir}/ckmr_morpho_id-mosquito_data.csv')\n\n# Convert date columns to datetime where appropriate\nmorpho_id['SubmissionDate'] = pd.to_datetime(morpho_id['SubmissionDate'])\nmorpho_id['initialise-date_collected'] = pd.to_datetime(morpho_id['initialise-date_collected'])\n\n# Join the datasets on KEY and PARENT_KEY\ndf_morpho = pd.merge(\n    mosquito_data, \n    morpho_id, \n    left_on='PARENT_KEY', \n    right_on='KEY', \n    how='inner',\n    suffixes=('_mosquito', '_morph')\n)\n\n# drop columns\ndf_morpho = df_morpho.drop(columns=['note', 'morph_id_other', \n      'PARENT_KEY', 'KEY_mosquito', 'initialise-collect_bool',\n       'end_note', 'meta-instanceID', 'KEY_morph', 'SubmitterID',\n       'SubmitterName', 'AttachmentsPresent', 'AttachmentsExpected', 'Status',\n       'ReviewState', 'DeviceID', 'Edits'])\n\n# remove training day data \ndf_morpho['Date'] = df_morpho.SubmissionDate.dt.date.astype(str)\ndf_morpho= df_morpho.query(\"Date != '2025-02-24'\")\n\n# join household datasets \nrequired_cols_uvlt = ['initialise-gps-Latitude', 'initialise-gps-Longitude', 'collection_end-barcode_outdoor', 'collection_end-barcode_indoor',  'initialise-collector']\ndf_uvlt = pd.read_csv(f\"{data_dir}/ckmr_uvlt.csv\")\ndf_uvlt = df_uvlt[required_cols_uvlt]\ndf_uvlt.columns = ['latitude', 'longitude', 'outdoor-uvlt', 'indoor-uvlt', 'collector']\nrequired_cols_asp = ['initialise-gps-Latitude', 'initialise-gps-Longitude', 'collection_end-barcode', 'initialise-collector']\ndf_asp = pd.read_csv(f\"{data_dir}/ckmr_sampling.csv\")\ndf_asp = df_asp[required_cols_asp]\ndf_asp.columns = ['latitude', 'longitude', 'barcode', 'collector']\ndf_asp = df_asp.dropna()\ndf_uvlt = df_uvlt.melt(id_vars=['latitude', 'longitude'], value_vars=['indoor-uvlt', 'outdoor-uvlt'], var_name='type', value_name='barcode')\ndf_asp = df_asp.assign(type='prokopack')\n\ndf_households = pd.concat([df_uvlt, df_asp])\n\ndf_morpho = df_morpho.rename(columns={'initialise-barcode':'barcode'})\ndf_morpho = df_morpho.merge(df_households, how='left')\n\nprint(f\"Number of total Anophelines recorded: {len(df_morpho)}\")","visibility":"remove","key":"Docm0BNW0p"},{"type":"output","id":"GT9ND_rJDxK0DAtKXTo1b","data":[],"visibility":"show","key":"bLGU6hHLZZ"}],"visibility":"show","key":"zmXitZR7E1"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Are there any duplicates? where an eppendorf has been scanned twice?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m7DECwuVeu"}],"key":"KBRwxRkgPv"}],"key":"fW1M4dg5mF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"dups = df_morpho.sample_id.value_counts()[df_morpho.sample_id.value_counts() > 1].to_frame().reset_index().sample_id\ndf_morpho.query(\"sample_id in @dups\")[['morph_id', 'Date', 'mosquito_sex', 'sample_id']]","visibility":"remove","key":"LGj9aXAZfz"},{"type":"output","id":"nyPFPUPcNnGd96dls5Szu","data":[],"visibility":"show","key":"yrvIqHV50n"}],"visibility":"show","key":"iZkS37NeK3"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How many total mosquitoes from each species?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BmQYXC7oBi"}],"key":"CuaB1LobBQ"}],"key":"Q4NIHVm5bF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"dups = df_morpho.sample_id.value_counts()[df_morpho.sample_id.value_counts() > 1].to_frame().reset_index().sample_id\ndf_morpho = df_morpho.query(\"sample_id not in @dups\")\n\ndf_morpho.morph_id.value_counts().to_frame()","visibility":"remove","key":"zxE8wBS3uR"},{"type":"output","id":"mCh9kbBY-sg7U6pp-L-6Z","data":[],"visibility":"show","key":"m4pRMRViZi"}],"visibility":"show","key":"hrwJhIhygs"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting species catch by date","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l2eMzIKxJb"}],"identifier":"plotting-species-catch-by-date","label":"Plotting species catch by date","html_id":"plotting-species-catch-by-date","implicit":true,"key":"UOkjvVFhFU"}],"key":"yUndNaTIex"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create species distribution figure using px\ndf_morpho_day_counts = df_morpho.groupby(['Date', 'morph_id']).agg({'morph_id':'count'}).rename(columns={'morph_id':'count'}).reset_index()\ndf_morpho_day_counts.columns= ['Date', 'Species', 'Count']\n\nfig_species = px.bar(\n    df_morpho_day_counts,\n    x='Species',\n    y='Count',\n    color='Date',\n    barmode='stack',\n    title='Distribution of Mosquito Species',\n    template='simple_white'\n)\n\nfig_species.show()","visibility":"remove","key":"o8JDRTcbwN"},{"type":"output","id":"i3e9LErYnQg0y6s_r6EQ4","data":[],"visibility":"show","key":"RBomgTHgH9"}],"visibility":"show","key":"bJzFc5gtxS"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Trap comparison","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b2BWhm8E38"}],"identifier":"trap-comparison","label":"Trap comparison","html_id":"trap-comparison","implicit":true,"key":"ymJPBlMEfa"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Lets plot the per-day (or per-night!) catches per trap.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IUa7nFklYW"}],"key":"vCWfwf2ahD"}],"key":"p4FLJz1bEN"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"trap_counts = df_households.groupby('type').size()\nsamples_per_trap_effort = df_morpho.groupby(['type', 'morph_id']).size() /  trap_counts\nsamples_per_trap_effort = samples_per_trap_effort.to_frame('mean_catch_per_trap').reset_index()\n\nfig_traps = px.bar(\n    samples_per_trap_effort,\n    x='type',\n    y='mean_catch_per_trap',\n    color='morph_id',\n    barmode='stack',\n    title='Mean catch per single trapping effort',\n    template='simple_white'\n)\n\nfig_traps.show()","visibility":"remove","key":"AE9DCqr3He"},{"type":"output","id":"b6rsK3iQ_DUFXd06Z0ioz","data":[],"visibility":"show","key":"s1zofHVxIY"}],"visibility":"show","key":"WhRp4yBqDl"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Males vs Females","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GYYu77UxJu"}],"identifier":"males-vs-females","label":"Males vs Females","html_id":"males-vs-females","implicit":true,"key":"LpJekKbLi1"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Lets plot the sex ratio we are finding in funestus.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VGytLyOIXS"}],"key":"UE1CE3BM4Z"}],"key":"qsp9pEL5S6"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create sex distribution figure for Anopheles funestus using px\nfunestus_data = df_morpho[df_morpho['morph_id'] == 'anopheles_funestus']\nsex_count = funestus_data['mosquito_sex'].value_counts().reset_index()\nsex_count.columns = ['Sex', 'Count']\n\nfig_sex = px.pie(\n    sex_count,\n    values='Count',\n    names='Sex',\n    title='Sex Distribution of Anopheles funestus',\n    color='Sex',\n    color_discrete_map={'female': 'pink', 'male': 'blue'},\n    template='simple_white'\n)\n\nfig_sex.show()","visibility":"remove","key":"UpUbsPvlcu"},{"type":"output","id":"uJUPwuxqSty3BZvSIQs0R","data":[],"visibility":"show","key":"UfJzIAX66t"}],"visibility":"show","key":"AU5UlUja1k"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And show some summary statistics:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yE7s0SxXT6"}],"key":"wieoHL9XxV"}],"key":"fzBe1sPuHt"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"\n# Statistical summary of the data\nsummary_stats = {\n    'Total mosquitoes': len(df_morpho),\n    'Number of households': df_morpho['initialise-household-id'].nunique(),\n    'Number of collectors': df_morpho['initialise-collector'].nunique(),\n    'Collection date range': f\"{df_morpho['initialise-date_collected'].min().date()} to {df_morpho['initialise-date_collected'].max().date()}\",\n    'Species distribution': dict(df_morpho['morph_id'].value_counts()),\n    'Overall sex distribution': dict(df_morpho['mosquito_sex'].value_counts()),\n    'Anopheles funestus sex distribution': dict(funestus_data['mosquito_sex'].value_counts())\n}\n\nprint(\"\\nSummary Statistics:\\n\")\nfor key, value in summary_stats.items():\n    print(f\"{key}: {value}\")","visibility":"remove","key":"rpiXTtzpbs"},{"type":"output","id":"2zEWDlUjhzVqHeKXUzfSq","data":[],"visibility":"show","key":"iokBmQRKIx"}],"visibility":"show","key":"HzRwJWWuKy"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot counts on a map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u2DzVSpZUl"}],"identifier":"plot-counts-on-a-map","label":"Plot counts on a map","html_id":"plot-counts-on-a-map","implicit":true,"key":"dznVuLlsc2"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Lets plot these data on a map to look at where we are sampling and where we are getting high numbers.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mR7jkQTKWT"}],"key":"sG0Ew7lm4x"}],"key":"KvrDdccggO"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"df_counts = df_morpho.groupby(['latitude', 'longitude', 'type', 'Date']).agg({'morph_id':'count'}).reset_index()\n\nfig = px.scatter_map(df_counts, lat=\"latitude\", lon=\"longitude\", color=\"type\", size='morph_id', hover_data='Date', zoom=13, height=550)\nfig","visibility":"remove","key":"O9uWGieZjY"},{"type":"output","id":"gbbDTqJe6692aUCMnCGd6","data":[],"visibility":"show","key":"kRtzkhu3WD"}],"visibility":"show","key":"IFFXhPFCgs"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With satellite background:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uVEwlOA4fA"}],"key":"Oo12vsSI4P"}],"key":"TdHMHWCNc6"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"\nfig = px.scatter_map(df_counts, lat=\"latitude\", lon=\"longitude\", color=\"type\", size='morph_id', hover_data='Date', zoom=13, height=550, map_style='satellite')\nfig","visibility":"remove","key":"UWFKfBa9WV"},{"type":"output","id":"cDtCrO-wVf-a0px-saRHT","data":[],"visibility":"show","key":"NepRtNvrc7"}],"visibility":"show","key":"DfxlyBQ0zm"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great work team!👏 👏 👏","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CN3pMJn3GD"}],"identifier":"great-work-team","label":"Great work team!👏 👏 👏","html_id":"great-work-team","implicit":true,"key":"u0P9dBTf9Z"}],"key":"Pj6ogT8fmk"}],"key":"pgqDnAHVeZ"},"references":{"cite":{"order":[],"data":{}}}}